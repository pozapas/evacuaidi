name: Deploy to GitHub Pages with Secure API Keys

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Check GitHub Secrets
      run: |
        echo "üîç Checking if GitHub Secrets are configured..."
        if [ -z "${{ secrets.GEMINI_EMBEDDING_API_KEY }}" ]; then
          echo "‚ùå GEMINI_EMBEDDING_API_KEY secret not found"
        else
          echo "‚úÖ GEMINI_EMBEDDING_API_KEY secret found"
        fi
        
        if [ -z "${{ secrets.GEMINI_GENERATION_API_KEY }}" ]; then
          echo "‚ùå GEMINI_GENERATION_API_KEY secret not found"
        else
          echo "‚úÖ GEMINI_GENERATION_API_KEY secret found"
        fi
        
    - name: Inject API Keys into Config
      env:
        GEMINI_EMBEDDING_API_KEY: ${{ secrets.GEMINI_EMBEDDING_API_KEY }}
        GEMINI_GENERATION_API_KEY: ${{ secrets.GEMINI_GENERATION_API_KEY }}
      run: |
        # Check if secrets are available
        if [ -z "$GEMINI_EMBEDDING_API_KEY" ] || [ -z "$GEMINI_GENERATION_API_KEY" ]; then
          echo "‚ùå Error: GitHub Secrets not configured!"
          echo ""
          echo "üìã To fix this:"
          echo "1. Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
          echo "2. Click 'New repository secret'"
          echo "3. Add these two secrets:"
          echo "   - Name: GEMINI_EMBEDDING_API_KEY"
          echo "   - Name: GEMINI_GENERATION_API_KEY"
          echo "4. Re-run this workflow"
          echo ""
          echo "üîó GitHub Secrets Documentation:"
          echo "https://docs.github.com/en/actions/security-guides/encrypted-secrets"
          exit 1
        fi
        
        # Show config before replacement (masked)
        echo "üîç Config before replacement:"
        head -15 config.js
        
        # Replace placeholders with actual API keys using environment variables
        sed -i "s/{{GEMINI_EMBEDDING_API_KEY}}/$GEMINI_EMBEDDING_API_KEY/g" config.js
        sed -i "s/{{GEMINI_GENERATION_API_KEY}}/$GEMINI_GENERATION_API_KEY/g" config.js
        
        # Verify keys were injected (without showing the actual keys)
        if grep -q "{{.*}}" config.js; then
          echo "‚ùå Error: Some placeholders were not replaced"
          echo "Remaining placeholders:"
          grep "{{.*}}" config.js || true
          exit 1
        else
          echo "‚úÖ API keys successfully injected"
          echo "üîç Config after replacement (first 15 lines):"
          head -15 config.js | sed 's/AIza[^'"'"']*/[MASKED_API_KEY]/g'
        fi
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
